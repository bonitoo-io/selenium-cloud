---
- name: Ensure old versions of Docker are not installed.
  package:
    name:
      - docker
      - docker-common
      - docker-engine
      - docker-client
      - docker-client-latest
      - docker-latest
      - docker-latest-logrotate
      - docker-logrotate
    state: absent

- name: Delete content & directory
  file:
    state: absent
    path: "{{ item }}"
  with_items:
    - /var/lib/docker/
    - /var/lib/containerd/

- name: Add Docker GPG key.
  rpm_key:
    key: "{{ docker_yum_gpg_key }}"
    state: present

- name: Add Docker repository.
  get_url:
    url: "{{ docker_yum_repo_url }}"
    dest: '/etc/yum.repos.d/docker-{{ docker_edition }}.repo'
    owner: root
    group: root
    mode: 0644

- name: Configure Docker Edge repo.
  ini_file:
    dest: '/etc/yum.repos.d/docker-{{ docker_edition }}.repo'
    section: 'docker-{{ docker_edition }}-edge'
    option: enabled
    value: '{{ docker_yum_repo_enable_edge }}'

- name: Configure Docker Test repo.
  ini_file:
    dest: '/etc/yum.repos.d/docker-{{ docker_edition }}.repo'
    section: 'docker-{{ docker_edition }}-test'
    option: enabled
    value: '{{ docker_yum_repo_enable_test }}'

- name: Install containerd separately (CentOS 8).
  package:
    name: https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm
    state: present
  when: ansible_distribution_major_version | int == 8

- name: Set fact
  set_fact:
    docker_package: "docker-{{ docker_edition }}"

- name: Install Docker.
  package:
    name: "{{ item.name }}"
    state: "{{ item.state | default(omit) }}"
  with_items: "{{ docker_packages }}"
  notify: restart docker